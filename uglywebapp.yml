- hosts: localhost
  connection: local
  vars:
    resource_group: ansiblewebapp1
    win_app_name: ansiblewindows
    linux_app_name: ansiblelinux
    vm_name: testvmss
    location: eastus
    plan_resource_group: ansiblewebapp1_plan
    win_plan_name: win_appplan1
    linux_plan_name: linux_appplan1
    linux_plan_resource_group: appserviceplan_test
  
  roles:
    - azure_preview_modules

  tasks:
  - name: Create a resource group
    azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ location }}"

  - name: Create a resource group
    azure_rm_resourcegroup:
        name: "{{ plan_resource_group }}"
        location: "{{ location }}"

  - name: Create a resource group
    azure_rm_resourcegroup:
        name: "{{ linux_plan_resource_group }}"
        location: "{{ location }}"

      
  - name: 1 - Create a windows web app with non-exist app service plan
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name }}1"
        plan:
          resource_group: "{{ plan_resource_group }}"
          name: "{{ win_plan_name }}"
          is_linux: false
          sku: S1
    register: results

  - name: 2- Create a windows web app with existing app service plan, try to update some root level params
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}2"
        plan:
          resource_group: "{{ plan_resource_group }}"
          name: "{{ win_plan_name }}"
        https_only: true
    register: results


  - name: 3 - create a win web app with java run time specific
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}3"
        java_settings:
          version: "1.8"
          java_container_name: "Tomcat"
          java_container_version: "8.0"
        plan:
          resource_group: "{{ plan_resource_group }}"
          name: "{{ win_plan_name }}"
    register: results

  - name: 4- create a win web app with python run time and java version
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}4"    
        frameworks:
          - name: "python"
            version: "2.7"
          - name: node
            version: "6.6"
          - name: "php"
            version: "7.0"
        plan:
          resource_group: "{{ plan_resource_group }}"
          name: "{{ win_plan_name }}"
    register: results

  - name: 5 - create a docker web app with some app settings, with docker image
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}5"      
        plan:
          resource_group: "{{ linux_plan_resource_group }}"
          name: "{{ linux_plan_name }}"
          is_linux: true
          sku: S1
          number_of_workers: 2
        purge_app_settings: true
        container_settings:
          name: "ansible/ansible:ubuntu1404"

  - name: 6 - create a docker web app with private acr registry
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}6"      
        plan:
          resource_group: "{{ linux_plan_resource_group }}"
          name: "{{ linux_plan_name }}"
          is_linux: true
          sku: S1
          number_of_workers: 2
        app_settings:
          testkey: "testvalue"
        container_settings:
          name: "ansible:ubuntu1404"
          registry_server_url: ansibleroledemo.azurecr.io
          registry_server_user: ansibleroledemo
          registry_server_password: 6Ny2uU+kayXmKpRfo2M5sC
        
  - name: 7- create a linux web app with linux_framework
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}7"      
        plan:
          resource_group: "{{ linux_plan_resource_group }}"
          name: "{{ linux_plan_name }}"
        app_settings:
          testkey: "testvalue"
        frameworks:
          - name: node
            version: "6.6"


  # - name: 8 - create a linux web app with linux_fx_version and container_settings
  #   azure_rm_webapp:
  #       resource_group: "{{ resource_group }}"
  #       name: "{{ win_app_name}}8"      
  #       plan:
  #         resource_group: "{{ linux_plan_resource_group }}"
  #         name: "{{ linux_plan_name }}"
  #         is_linux: true
  #         sku: S1
  #         number_of_workers: 1
  #       app_settings:
  #         testkey: "testvalue"
  #       linux_framework:
  #         name: node
  #         version: "6.6"
  #       container_settings:
  #         name: "ansible/ansible:ubuntu1404"
    
  - name: 9 - create a windows app with deployment source github
    azure_rm_webapp:
        resource_group: "{{ resource_group }}"
        name: "{{ win_app_name}}9"
        deployment_source:
          url: "https://github.com/yungezz/ansible-testapp"
          branch: master
        scm_type: GitHub
        plan:
          resource_group: "{{ plan_resource_group }}"
          name: "{{ win_plan_name }}"
    
  # - name: assert error in windows_framework, suboption java_version is mutually exclusive with other framework version
  #   azure_rm_webapp:
  #     resource_group: "{{ resource_group }}"
  #     name: "{{ win_app_name }}11"
  #     plan: 
  #       resource_group: "{{ plan_resource_group }}"
  #       name: "{{ win_plan_name }}"
  #     windows_framework:
  #       python_version: "2.7"
  #       php_version: "7.0"
  #       java_version: "1.8"
  #   register: fail_win_java_version_mutual_exclusive
  #   failed_when: fail_win_java_version_mutual_exclusive.msg != "java_version is mutually exclusive with other framework version in windows_framework."
